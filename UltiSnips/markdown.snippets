global !p

def mathx():
	l=vim.eval("map(synstack(line('.'),col('.')),'synIDattr(v:val, \"name\")')")
	if 'texmathzonex' in l:
		return 1
	else:
		return 0

def mathy():
	l=vim.eval("map(synstack(line('.'),col('.')),'synIDattr(v:val, \"name\")')")
	if 'texmathzoney' in l:
		return 1
	else:
		return 0

def math():
	l=vim.eval("map(synstack(line('.'),col('.')),'synIDattr(v:val, \"name\")')")
	if 'mkdMath' in l:
		return 1
	else:
		return 0

endglobal

snippet tmd "time date"
`!p
import time
snip.rv = time.strftime("%Y-%m-%d", time.localtime())
`
endsnippet

snippet tmt "time time"
`!p
import time
snip.rv = time.strftime("%H:%M:%S", time.localtime())
`
endsnippet

snippet tml "time long"
`!p
import time
snip.rv = time.strftime("%Y-%m-%d %a", time.localtime())
`
endsnippet

snippet diary "" b
# ${1:`!p
import time
snip.rv = time.strftime("%Y-%m-%d", time.localtime())
import time
`}

> ${2:`!p
import time
snip.rv = time.strftime("%a", time.localtime())
import time
`}
> ${3:Weather}
> Edit time: `!p
import time
snip.rv = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
`

${0}
endsnippet

snippet mkk "Math" wA
\$$1\$$0
endsnippet

context "math()"
snippet beg "\begin{}" bA
\\begin\{$1\}
$0
\\end\{$1\}
endsnippet

context "math()"
snippet ali "aligned" biA
\\begin\{aligned\}
$1
\\end\{aligned\}
$0
endsnippet

context "math()"
snippet case "case" bA
\\begin\{cases\}
$1
\\end\{cases\}
endsnippet

context "math()"
snippet 2case "case" bA
\\begin\{cases\}
$1, &$2\\\\
$3, &$4
\\end\{cases\}
endsnippet
context "math()"
snippet gathe "gathered" iA
\left.\begin{gathered}
$1
\end{gathered}\right\}
endsnippet

context "math()"
snippet sumf "infty sum" iA
`!p
if(mathx()):
	snip.rv='\displaystyle'
`\sum_{${1:-\infty}^{${2:\infty}}$0
endsnippet

context "math()"
snippet sumi "isum" iA
`!p
if(mathx()):
	snip.rv='\displaystyle'
`\sum_{${1:i}=${2:0}^{${3:n}}$0
endsnippet

context "math()"
snippet intf "infty int" iA
`!p
if(mathx()):
	snip.rv="\displaystyle"
`\int_{${1:-\infty}}^{${2:\infty}}$3d
endsnippet

context "math()"
snippet intt "infty int" iA
`!p
if(mathx()):
	snip.rv="\displaystyle"
`\int_{$1}^{$2}$3d
endsnippet
context "math()"
snippet // "frac/dfrac" iA
\dfrac{${1:1}}{$2}
endsnippet

context "math()"
snippet ;uu "^{}" iA
^{$1}$0
endsnippet

context "math()"
snippet ;ii "_{}" iA
_{$1}$0
endsnippet

context "math()"
snippet ;ui "_" iA
_
endsnippet

context "math()"
snippet ;iu "^" iA
^
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet derx "derivation d\dx" iA
\dfrac{d$1}{dx}$0
endsnippet

context "math()"
snippet dert "dervation d\dt" iA
\dfrac{d$1}{dt}$0
endsnippet

context "math()"
snippet derr "dervation d\d" iA
\dfrac{d$1}{d$2}$0
endsnippet

context "math()"
snippet parx "partial p\px" iA
\dfrac{\partial$1}{\partial x}$0
endsnippet

context "math()"
snippet part "partial p\pt" iA
\dfrac{\partial$1}{\partial t}$0
endsnippet

context "math()"
snippet parr "partial p\p" iA
\dfrac{\partial$1}{\partial $2}$0
endsnippet

context "math()"
snippet sqr "square root" iA
\sqrt{$1}
endsnippet

context "math()"
snippet cur "cubic root" iA
\sqrt[3]{$1}
endsnippet

context "math()"
snippet rot "root" iA
\sqrt[$1]{$2}
endsnippet

context "math()"
snippet long "xlongequal" iA
\xlongequal{${1:def}}[$2]
endsnippet

context "math()"
snippet alp "alpha" iA
\alpha
endsnippet

context "math()"
snippet bet "beta" iA
\beta
endsnippet

context "math()"
snippet gam "gamma" iA
\gamma
endsnippet

context "math()"
snippet del "delta" iA
\delta
endsnippet

context "math()"
snippet eps "epsilon" iA
\epsilon
endsnippet

context "math()"
snippet zet "zeta" iA
\zeta
endsnippet

context "math()"
snippet eta "\eta" iAw
\eta
endsnippet

context "math()"
snippet the "theta" iA
\theta
endsnippet

context "math()"
snippet iot "iota" iA
\iota
endsnippet

context "math()"
snippet kap "kappa" iA
\kappa
endsnippet

context "math()"
snippet lam "lambda" iA
\lambda
endsnippet

context "math()"
snippet mu "mu" iA
\mu
endsnippet

context "math()"
snippet nu "nu" iA
\nu
endsnippet

context "math()"
snippet xi "xi" iA
\xi
endsnippet

context "math()"
snippet pi "\pi" iA
\pi
endsnippet

context "math()"
snippet rho "rho" iA
\rho
endsnippet

context "math()"
snippet sig "sigma" iA
\sigma
endsnippet

context "math()"
snippet tau "\tau" iA
\tau
endsnippet

context "math()"
snippet ups "upsilon" iA
\upsilon
endsnippet

context "math()"
snippet phi "pih" iA
\phi
endsnippet

context "math()"
snippet chi "chi" iA
\chi
endsnippet

context "math()"
snippet psi "psi" iA
\psi
endsnippet

context "math()"
snippet ome "omega" iA
\omega
endsnippet

context "math()"
snippet Gam "Gamma" iA
\Gamma
endsnippet

context "math()"
snippet Del "Delta" iA
\Delta
endsnippet

context "math()"
snippet The "Theta" iA
\Theta
endsnippet

context "math()"
snippet Lam "Lambda" iA
\Lambda
endsnippet

context "math()"
snippet Xii "Xi" iA
\Xi
endsnippet

context "math()"
snippet Pi "\Pi" iA
\Pi
endsnippet

context "math()"
snippet Sig "Sigma" iA
\Sigma
endsnippet

context "math()"
snippet Phi "\Phi" iA
\Phi
endsnippet

context "math()"
snippet Psi "Psi" iA
\Psi
endsnippet

context "math()"
snippet Ome "Omega" iA
\Omega
endsnippet

context "math()"
snippet vth "vartheta" iA
\vartheta
endsnippet

context "math()"
snippet vka "varkappa" iA
\varkappa
endsnippet

context "math()"
snippet vpp "varpi" iA
\varpi
endsnippet

context "math()"
snippet vrh "varrho" iA
\varrho
endsnippet

context "math()"
snippet vph "varphi" iA
\varphi
endsnippet

context "math()"
snippet ttt "(t)" iA
(t)
endsnippet

context "math()"
snippet xxx "(x)" iA
(x)
endsnippet

context "math()"
snippet ooo "infty" iA
\infty
endsnippet

context "math()"
snippet symbol "symbol угдтЈи"
This is a line of symbol
endsnippet

context "math()"
snippet +- "+-" iA
\pm
endsnippet

context "math()"
snippet -+ "-+" iA
\mp
endsnippet

context "math()"
snippet cd "cdot" iA
\cdot 
endsnippet

context "math()"
snippet != "no equal" iA
\ne
endsnippet

context "math()"
snippet == "equiv" iA
\equiv
endsnippet

context "math()"
snippet -= "approx" iA
\approx
endsnippet

context "math()"
snippet ... "cdots" iA
 /cdots 
endsnippet



context "math()"
snippet sin "sin" iA
\sin
endsnippet

context "math()"
snippet cos "cos" iA
\cos
endsnippet

context "math()"
snippet tan "tan" iA
\tan
endsnippet


context "math()"
snippet || "\left|" iA
\left| $1 \right|
endsnippet

context "math()"
snippet (( "\left(" iA
\left( $1 \right)
endsnippet

context "math()"
snippet [[ "\left|" iA
\left[ $1 \right]
endsnippet

context "math()"
snippet {{ "\left|" iA
\left\{ $1 \right\}
endsnippet

context "math()"
snippet ows "otherwise" iA
otherwise
endsnippet

context "math()"
snippet FF "mathscr{F}, fourier" iA
\mathscr{F}\\{$1\\}
endsnippet


